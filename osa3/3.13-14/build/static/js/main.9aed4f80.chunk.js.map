{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","oldObject","request","delete","console","log","App","useState","name","number","persons","setPersons","newName","setNewName","newNumber","setNewNumber","nameToShow","setNameToShow","notificationMessage","setNotificationMessage","errorMessage","setErrorMessage","Filter","value","onChange","event","target","PersonForm","onSubmit","preventDefault","nameObj","getName","find","person","includes","handleReplace","personService","returnedPerson","concat","type","window","confirm","map","p","Persons","newLis","filter","search","RegExp","length","i","key","onClick","catch","error","handleDelete","useEffect","initialPersons","Notification","message","className","ReactDOM","render","document","getElementById"],"mappings":"iOACMA,EAAU,eAwBD,EAtBA,WAGb,OAFgBC,IAAMC,IAAIF,GAEXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAmB5B,EAhBA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAc5B,EAXA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAS5B,EANA,SAACG,EAAIE,GAClB,IAAMC,EAAUV,IAAMW,OAAN,UAAgBZ,EAAhB,YAA2BQ,GAAME,GAEjD,OADAG,QAAQC,IAAR,UAAed,EAAf,YAA0BQ,GAAME,GACzBC,EAAQR,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCiJ5BU,G,MAnKH,WAAO,IAAD,EACeC,mBAAS,CACtC,CAAEC,KAAM,cAAeC,OAAQ,SAFjB,mBACRC,EADQ,KACCC,EADD,OAIgBJ,mBAAS,IAJzB,mBAIRK,EAJQ,KAICC,EAJD,OAKoBN,mBAAS,IAL7B,mBAKRO,EALQ,KAKGC,EALH,OAMsBR,mBAAS,IAN/B,mBAMRS,EANQ,KAMIC,EANJ,OAOsCV,mBAAS,MAP/C,mBAOTW,EAPS,KAOYC,EAPZ,OAQwBZ,mBAAS,MARjC,mBAQTa,EARS,KAQKC,EARL,KAUVC,EAAS,WAMb,OACA,wCACA,2BACEC,MAAOP,EACPQ,SATyB,SAACC,GAC1BrB,QAAQC,IAAIoB,EAAMC,OAAOH,OACzBN,EAAcQ,EAAMC,OAAOH,YAczBI,EAAa,WA+BjB,OACE,0BAAMC,SA/BQ,SAACH,GACfA,EAAMI,iBACNzB,QAAQC,IAAI,iBAAkBoB,EAAMC,QAEpC,IAAMI,EAAU,CACdtB,KAAMI,EAASH,OAAQK,GAEnBiB,EAAUrB,EAAQsB,MAAK,SAAAC,GAAM,OAAIA,EAAOzB,OAASsB,EAAQtB,QAU/DE,EAAQwB,SAASH,GAAWI,EAAcL,EAASC,EAAQhC,IARlCqC,EACjBN,GACPpC,MAAK,SAAA2C,GACJ1B,EAAWD,EAAQ4B,OAAOD,IAC1BlB,EAAuB,gBAAD,OAAiBW,EAAQtB,OAC/CK,EAAW,OAIbT,QAAQC,IAAIK,KAcV,sCACA,2BACAa,MAAOX,EACPY,SAdqB,SAACC,GACxBrB,QAAQC,IAAIoB,EAAMC,OAAOH,OACzBV,EAAWY,EAAMC,OAAOH,WAetB,wCACA,2BACAA,MAAOT,EACPU,SAhBuB,SAACC,GAC1BrB,QAAQC,IAAIoB,EAAMC,OAAOH,OACzBR,EAAaU,EAAMC,OAAOH,WAiBxB,6BACA,4BAAQgB,KAAK,UAAb,UAmBAJ,EAAgB,SAACF,EAAOlC,GACxByC,OAAOC,QAAP,iBAAyB7B,EAAzB,6CACFwB,EAAqBrC,EAAGkC,GAAQvC,MAAK,SAAA2C,GACnC1B,EAAWD,EAAQgC,KAAI,SAAAC,GAAC,OAAIA,EAAE5C,KAAOA,EAAK4C,EAAIN,MAC9ClB,EAAuB,mBAAD,OAAoBc,EAAOzB,MAAO,IACxDJ,QAAQC,IAAI,eAKZuC,EAAU,WACdxC,QAAQC,IAAI,eAAgBW,GAC5B,IAAM6B,EAASnC,EAAQoC,QAAO,SAAAb,GAAM,OAAIA,EAAOzB,KAAKuC,OAAO,IAAIC,OAAOhC,EAAY,OAAS,KAE3F,OACoB,IAAlB6B,EAAOI,OAAevC,EAAQgC,KAAI,SAACT,EAAQiB,GAAT,OAAe,yBAAKC,IAAKD,GAAIjB,EAAOzB,KAArB,IAA4ByB,EAAOxB,WAClFoC,EAAOH,KAAI,SAACT,EAAQiB,GAAT,OACb,yBAAKC,IAAKD,GAAIjB,EAAOzB,KAArB,IAA4ByB,EAAOxB,OAAnC,IAA2C,4BAAQ2C,QAAS,kBA/B3C,SAACnB,EAAOlC,GAC3BK,QAAQC,IAAI,SAAS4B,EAAOzB,KAAKT,GAC7ByC,OAAOC,QAAQ,kCACjBL,EAAqBrC,EAAGkC,GAAQvC,MAAK,SAAA2C,GACnCjC,QAAQC,IAAI,iBAAkB4B,EAAOzB,MACrCG,EAAWD,EAAQoC,QAAO,SAAAH,GAAC,OAAIA,EAAE5C,KAAOA,MACxCoB,EAAuB,kBAAD,OAAmBc,EAAOzB,OAChDK,EAAW,OACVwC,OAAM,SAAAC,GACPjC,EAAgB,kBAAD,OAAmBY,EAAOzB,KAA1B,6CAsBiD+C,CAAatB,EAAOiB,EAAE,KAA7C,UAA3C,SAIJM,qBAAU,WACRpD,QAAQC,IAAI,UAEV+B,IAEC1C,MAAK,SAAA+D,GACH9C,EAAW8C,QAEf,IAEH,IAAMC,EAAe,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAErB,OADAvD,QAAQC,IAAI,UAAWe,GACP,OAAZuC,EACK,KAGW,OAAjBvC,EACM,yBAAKwC,UAAU,SACpBD,GAKF,yBAAKC,UAAU,gBACZD,IAUP,OALAvD,QAAQC,IAAI,SAAUK,EAAQuC,OAAS,WACvC7C,QAAQC,IAAI,oBAAoBK,GAK9B,6BACE,kBAACY,EAAD,MACA,yCACA,kBAACoC,EAAD,CAAcC,QAASzC,IACvB,kBAACwC,EAAD,CAAcC,QAASvC,IACvB,kBAACO,EAAD,MACA,uCACJ,6BACE,kBAACiB,EAAD,UC3JJiB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.9aed4f80.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  \r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst delett = (id, oldObject) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`, oldObject)\r\n  console.log(`${baseUrl}/${id}`, oldObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, delett }","import React, { useState, useEffect } from 'react'\r\nimport personService from './services/persons'\r\nimport './index.css'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons] = useState([\r\n    { name: 'Arto Hellas', number: '040'}\r\n  ]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ nameToShow, setNameToShow ] = useState('')\r\n  const [notificationMessage, setNotificationMessage] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  const Filter = () => {\r\n    const handleFilterChange = (event) => {\r\n      console.log(event.target.value)\r\n      setNameToShow(event.target.value)\r\n    }\r\n\r\n    return (\r\n    <div> filter: \r\n    <input \r\n      value={nameToShow} \r\n      onChange={handleFilterChange}\r\n    />\r\n    </div>\r\n    )\r\n  }\r\n\r\n\r\n  const PersonForm = () => {\r\n    const addName = (event) => {\r\n      event.preventDefault()\r\n      console.log('button clicked', event.target)\r\n  \r\n      const nameObj = {\r\n        name: newName, number: newNumber\r\n      }\r\n      const getName = persons.find(person => person.name === nameObj.name)\r\n\r\n      const addPerson = () =>  personService\r\n      .create(nameObj)\r\n      .then(returnedPerson => {\r\n        setPersons(persons.concat(returnedPerson))\r\n        setNotificationMessage(`Added person ${nameObj.name}`)\r\n        setNewName('')\r\n      })\r\n\r\n      persons.includes(getName) ? handleReplace(nameObj, getName.id) : addPerson()\r\n      console.log(persons)     \r\n    }\r\n  \r\n    const handleNameChange = (event) => {\r\n      console.log(event.target.value)\r\n      setNewName(event.target.value)\r\n    }\r\n    const handleNumberChange = (event) => {\r\n      console.log(event.target.value)\r\n      setNewNumber(event.target.value)\r\n    }\r\n\r\n    return (\r\n      <form onSubmit={addName}>\r\n        <div> name: \r\n        <input \r\n        value={newName} \r\n        onChange={handleNameChange}\r\n        />\r\n        </div>\r\n        <div> number: \r\n        <input \r\n        value={newNumber} \r\n        onChange={handleNumberChange}\r\n        />\r\n        </div>\r\n        <div>  \r\n        <button type=\"submit\">add</button>\r\n        </div>\r\n        </form>\r\n    )\r\n  }\r\n  const handleDelete = (person,id) => {\r\n    console.log(\"BUTTON\",person.name,id)\r\n    if (window.confirm(\"Do you really want to delete?\")) { \r\n      personService.delett(id,person).then(returnedPerson => {\r\n        console.log(\"deleted object\", person.name)\r\n        setPersons(persons.filter(p => p.id !== id)) \r\n        setNotificationMessage(`Deleted person ${person.name}`)          \r\n        setNewName('')\r\n      }).catch(error => {\r\n        setErrorMessage(`Information of ${person.name} has already been removed from server`)\r\n      })\r\n    }  \r\n  }\r\n  \r\n  const handleReplace = (person,id) => {\r\n    if (window.confirm(`Person ${newName} is already in your phonebook. Replace?`)) { \r\n      personService.update(id,person).then(returnedPerson => {\r\n        setPersons(persons.map(p => p.id !== id ? p : returnedPerson))\r\n        setNotificationMessage(`Replaced person ${person.name}`,\"\")\r\n        console.log(\"updated\")\r\n      })\r\n    }\r\n  }\r\n\r\n  const Persons = () => {\r\n    console.log(\"name to show\", nameToShow)\r\n    const newLis = persons.filter(person => person.name.search(new RegExp(nameToShow, \"i\")) > -1)\r\n    \r\n    return (\r\n      newLis.length === 0 ? persons.map((person, i) => <div key={i}>{person.name} {person.number}</div>) \r\n      : newLis.map((person, i) => \r\n      <div key={i}>{person.name} {person.number} <button onClick={() => handleDelete(person,i+1)}>delete</button> </div>)\r\n      )\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('effect')\r\n     \r\n      personService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n         setPersons(initialPersons)\r\n      })  \r\n  }, [])\r\n    \r\n  const Notification = ({message}) => {\r\n    console.log(\"ISERROR\", errorMessage)\r\n    if (message === null) {\r\n      return null\r\n    }\r\n\r\n    if(errorMessage !== null ){\r\n      return <div className=\"error\">\r\n       {message}\r\n      </div>\r\n    }\r\n  \r\n    else return (\r\n      <div className=\"notification\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  console.log('render', persons.length , 'persons') \r\n  console.log(\"checkerforpersons\",persons)\r\n\r\n  \r\n  \r\n  return (\r\n    <div>\r\n      <Filter/>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={notificationMessage}/>\r\n      <Notification message={errorMessage}/>\r\n      <PersonForm/>\r\n      <h2>Numbers</h2>\r\n  <div>\r\n    <Persons/>\r\n  </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App\r\n//ReactDOM.render(<App />, document.getElementById('root'))\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}